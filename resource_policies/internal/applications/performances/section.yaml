---
apiVersion: api.cerbos.dev/v1
resourcePolicy:
    version: "default"
    resource: "internal:applications:performances:section"
    rules:
        - name: performance-section-create
          actions: ["create"]
          effect: EFFECT_ALLOW
          roles: ["*"]
          condition:
              match:
                  expr: P.roles.exists(x, x in R.attr.statOwnerSuperRoleIds)
          output:
              when:
                  ruleActivated: |-
                      {"message": "ruleActivated message"}
                  conditionNotMet: |-
                      {"message": "conditionNotMet message", "R.attr.statOwnerSuperRoleIds": R.attr.statOwnerSuperRoleIds}

        - name: performance-section-create-event
          actions: ["create-event"]
          effect: EFFECT_ALLOW
          roles: ["*"]
          condition:
              match:
                  any:
                      of:
                          - expr: P.id == R.attr.statOwnerId
                          - expr: P.roles.exists(x, x in R.attr.sectionSuperRoleIds)

        - name: performance-section-read
          actions: ["read"]
          effect: EFFECT_ALLOW
          roles: ["*"]
          condition:
              match:
                  any:
                      of:
                          - expr: P.id == R.attr.statOwnerId
                          - expr: P.roles.exists(x, x in R.attr.statOwnerSuperRoleIds)
                          - expr: P.roles.exists(x, x in R.attr.sectionSuperRoleIds)
          output:
              when:
                  ruleActivated: |-
                      {"message": "ruleActivated message", "P.id": P.id, "P.roles": P.roles, "R.attr.statOwnerId": R.attr.statOwnerId, "R.attr.statOwnerSuperRoleIds": R.attr.statOwnerSuperRoleIds, "R.attr.sectionSuperRoleIds": R.attr.sectionSuperRoleIds}
                  conditionNotMet: |-
                      {"message": "conditionNotMet message", "P.id": P.id, "P.roles": P.roles, "R.attr.statOwnerId": R.attr.statOwnerId, "R.attr.statOwnerSuperRoleIds": R.attr.statOwnerSuperRoleIds, "R.attr.sectionSuperRoleIds": R.attr.sectionSuperRoleIds}

        - name: performance-section-update
          actions: ["update"]
          effect: EFFECT_ALLOW
          roles: ["*"]
          condition:
              match:
                  expr: P.roles.exists(x, x in R.attr.statOwnerSuperRoleIds)
          output:
              when:
                  ruleActivated: |-
                      {"message": "ruleActivated message", "R.attr.statOwnerSuperRoleIds": R.attr.statOwnerSuperRoleIds}
                  conditionNotMet: |-
                      {"message": "conditionNotMet message", "R.attr.statOwnerSuperRoleIds": R.attr.statOwnerSuperRoleIds}

        - name: performance-section-delete
          actions: ["delete"]
          effect: EFFECT_ALLOW
          roles: ["*"]
          condition:
              match:
                  expr: P.roles.exists(x, x in R.attr.statOwnerSuperRoleIds)
          output:
              when:
                  ruleActivated: |-
                      {"message": "ruleActivated message", "P.id": P.id, "P.roles": P.roles, "R.attr.statOwnerSuperRoleIds": R.attr.statOwnerSuperRoleIds}
                  conditionNotMet: |-
                      {"message": "conditionNotMet message", "P.id": P.id, "P.roles": P.roles, "R.attr.statOwnerSuperRoleIds": R.attr.statOwnerSuperRoleIds}
